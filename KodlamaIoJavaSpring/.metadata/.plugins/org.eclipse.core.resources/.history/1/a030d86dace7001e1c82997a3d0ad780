package kodlama.o.rentACar.business.concretes;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import kodlama.o.rentACar.business.abstracts.BrandService;
import kodlama.o.rentACar.business.requests.CreateBrandRequest;
import kodlama.o.rentACar.business.responses.GetAllBrandsResponse;
import kodlama.o.rentACar.core.utilities.mappers.ModelMapperService;
import kodlama.o.rentACar.dataAccess.abstracts.BrandRepository;
import kodlama.o.rentACar.entities.concretes.Brand;
import lombok.AllArgsConstructor;

@Service
@AllArgsConstructor
public class BrandManager implements BrandService{
	private BrandRepository brandRepository;
	private ModelMapperService modelMapperService;
	
	

	@Override
	public List<GetAllBrandsResponse> getAll() {
		
		List<Brand> brands=brandRepository.findAll();
		/*
		 * List<GetAllBrandsResponse> allBrandsResponses=new
		 * ArrayList<GetAllBrandsResponse>();//boş liste oluşturduk
		 * 
		 * for (Brand brand : brands) {//foreach //analisteyi dolaşırız Brand
		 * GetAllBrandsResponse allBrands=new GetAllBrandsResponse();//eleman oluşturduk
		 * allBrands.setId(brand.getId());//her seferınde her markanın ıd name set ettik
		 * allBrands.setName(brand.getName());
		 * allBrandsResponses.add(allBrands);//elemanı al allbrandsresponse ekle
		 * 
		 * }
		 */
		//bu liste oldugu için farklı davranıcaz aşşada bir liste varsa onu tektek dolaşmamızı saglar
		List<GetAllBrandsResponse> allBrandsResponses=brands.stream()
				.map(brand->this.modelMapperService.forResponse()
						.map(brand, GetAllBrandsResponse.class)).collect(Collectors.toList());
		
		
		return allBrandsResponses;
	}

	@Override
	public void add(CreateBrandRequest createBrandRequest) {
		// veritabanına kayıt ekleme
		//Brand brand=new Brand();
		//brand.setName(createBrandRequest.getName());
		
//forRequest brand arka planda newliyo 44.satırdaki sonra createBrandRequest karşılaştırıp aynı olanları aktarıyo 
		Brand brand=this.modelMapperService.forRequest().map(createBrandRequest, Brand.class);
		
		this.brandRepository.save(brand);//save içi bizden brand istiyo oyüzden yukarda brand olustururuz
		
	}

}
